version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: madworks
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  createbuckets:
    image: quay.io/minio/mc:latest
    depends_on:
      - minio
    entrypoint: ["sh","-c"]
    command: >
      "mc alias set local http://minio:9000 minio minio123 && \
       mc mb -p local/assets || true && \
       mc mb -p local/outputs || true && \
       mc anonymous set download local/outputs || true && \
       echo 'Buckets ready' && sleep 1"

  api:
    build:
      context: ../services/api
      dockerfile: Dockerfile
    environment:
      - PGHOST=postgres
      - PGUSER=app
      - PGPASSWORD=app
      - PGDATABASE=madworks
      - PGPORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET_ASSETS=assets
      - S3_BUCKET_OUTPUTS=outputs
      - PY_PIPELINE_BASE=http://python-pipeline:8000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - minio
      - createbuckets
      - python-pipeline

  worker:
    build:
      context: ../services/orchestrator
      dockerfile: Dockerfile
    environment:
      - PGHOST=postgres
      - PGUSER=app
      - PGPASSWORD=app
      - PGDATABASE=madworks
      - PGPORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET_OUTPUTS=outputs
      - S3_BUCKET_ASSETS=assets
      - PY_PIPELINE_BASE=http://python-pipeline:8000
    depends_on:
      - postgres
      - redis
      - minio
      - createbuckets
      - python-pipeline

  python-pipeline:
    build:
      context: ../services/python_service
      dockerfile: Dockerfile
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET_ASSETS=assets
      - S3_BUCKET_OUTPUTS=outputs
    ports:
      - "8000:8000"
    depends_on:
      - minio

volumes:
  pgdata:
  minio-data:


